{"version":3,"sources":["services/axios.js","state/index.js","components/pokemon-image/pokemon-image.js","components/pokemon-physics/pokemon-physics.js","components/pokemon-types/pokemon-types.js","components/pokemon-stats/pokemon-stats.js","utils/capitalizeLetter.js","components/list-item/list-item.js","components/pokemon-list/pokemon-list.js","components/block-wrapper/block-wrapper.js","components/items-per-page/items-per-page.js","utils/debounce.js","components/search-pokemon/search-pokemon.js","components/types-filter/types-filter.js","components/header/header.js","components/pagination/pagination.js","components/app/app.js","index.js"],"names":["axios","defaults","baseURL","state","getUnique","array","prop","map","e","i","final","indexOf","filter","Math","ceil","this","itemsCount","perPage","filteredItems","length","rawList","currentPage","observable","search","types","computed","action","_callee2","params","regenerator_default","a","wrap","_context2","prev","next","_this","loading","limit","abrupt","all","get","then","_ref2","_ref3","Object","slicedToArray","pokemons","pokemonTypes","data","results","loadTargetItems","asyncToGenerator","mark","_callee","_context","JSON","parse","window","localStorage","getItem","t0","sent","favorites","stop","catch","err","response","console","log","finally","_callee3","urlsToLoad","_context3","_this2","renderList","slice","offset","item","url","res","_callee4","_context4","_this3","type","concat","_ref7","toArray","forEach","typeList","push","apply","toConsumableArray","pokemon","_callee5","id","_context5","_this4","includes","favId","setItem","stringify","_callee6","value","_context6","_this5","page","_this6","_this7","filters","filterItems","arguments","undefined","_this8","_this9","_callee7","_this10$filters","name","tempList","regex","_context7","_this10","getByTypes","RegExp","test","PokemonImage","_ref","_ref$imgSrc","imgSrc","react_default","createElement","src","width","height","alt","PokemonPhysics","props","_props$height","_props$weight","weight","className","Icon","PokemonTypes","Label","color","key","slot","PokemonStats","_ref$stats","stats","properties","stat","base_stat","List","Item","charAt","toUpperCase","capitalizeLetter","ListItem","_props$data","_props$toggleFavorite","toggleFavorite","_props$isFavorite","isFavorite","Grid","Column","attached","as","size","onClick","pokemon_image","sprites","front_default","pokemon_types_pokemon_types","pokemon_stats","PokemonList","inject","observer","_this$props$state","Loader","active","listComponent","list_item_list_item","Component","Block","children","ITEMS_PER_PAGE","ItemsPerPage","changePerPage","count","onPerPageChange","horizontal","debounce","callback","delay","timeout","_len","args","Array","_key","clearTimeout","setTimeout","SearchPokemon","searchItems","persist","updateSearchFilter","resetForm","_this$props$state2","onSearchChange","Form","Input","icon","iconPosition","placeholder","onChange","Button","TypesFilter","filterByType","preventDefault","toggleType","resetTypeFilter","Fragment","Header","block_wrapper","style","marginTop","items_per_page","mobile","tablet","computer","search_pokemon_search_pokemon","types_filter_types_filter","Paginator","onPageChange","activePage","totalPages","textAlign","Pagination","App","getRawList","index_module","Container","header","pokemon_list","pagination_pagination","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.df21a1fe.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'https://pokeapi.co/api/v2'\n\nexport { axios }\n","import { computed, observable, action } from 'mobx'\nimport { axios } from '../services/axios'\n\nclass Store {\n  // pokemons data\n  @observable loading = false\n  @observable rawList = []\n  @observable renderList = []\n  @observable pokemonTypes = []\n  @observable favorites = []\n  // pokemons filters\n  @observable filteredItems = []\n  @observable filters = {\n    search: '',\n    types: []\n  }\n\n  // pagination data\n  @observable perPage = 10\n  @observable currentPage = 1\n\n  @computed get totalPages () {\n    return Math.ceil(this.itemsCount / this.perPage)\n  }\n\n  @computed get itemsCount () {\n    return this.filteredItems.length > 0 ? this.filteredItems.length : this.rawList.length\n  }\n\n  @computed get offset () {\n    return (this.currentPage - 1) * this.perPage\n  }\n\n  @action getRawList = async () => {\n    this.loading = true\n    const params = {\n      limit: 1000\n    }\n    // get full pokemons and types list\n    return axios.all([\n      axios.get('/pokemon/', { params }),\n      axios.get('/type/')\n    ])\n      .then(([pokemons, types]) => {\n        this.pokemonTypes = types.data.results\n        this.rawList = pokemons.data.results\n        this.filteredItems = pokemons.data.results\n        return this.loadTargetItems()\n      })\n      .then(async () => {\n        // get 'favorites' from localStorage or set it as empty array\n        this.favorites = await JSON.parse(window.localStorage.getItem('favorites')) || []\n      })\n      .catch(err => {\n        const { response } = err\n        console.log('Error:', response)\n      })\n      .finally(() => {\n        this.loading = false\n      })\n  }\n\n  @action loadTargetItems = async () => {\n    if (!this.filteredItems.length) {\n      this.renderList = []\n      return null\n    }\n    this.loading = true\n    const urlsToLoad = this.filteredItems\n      .slice(this.offset, this.offset + this.perPage)\n      .map(item => item.url)\n    return axios.all(urlsToLoad.map(url => axios.get(url)))\n      .then(response => {\n        // use getUnique function to prevent duplicates\n        // in case a pokemon belongs to more than 1 type\n        this.renderList = this.getUnique(response.map(res => res.data), 'name')\n      })\n      .catch(err => {\n        console.log('Error: ', err.response)\n      })\n      .finally(() => {\n        this.loading = false\n      })\n  }\n\n  @action getByTypes = async (types) => {\n    this.loading = true\n    return axios.all(types.map(type => axios.get(`/type/${type}/`)))\n      .then(([...data]) => {\n        const results = []\n        data.forEach(typeList => {\n          results.push(...typeList.data.pokemon.map(item => item.pokemon))\n        })\n        return results\n      })\n      .catch((err) => {\n        console.log('Error:', err.response)\n      })\n      .finally(() => {\n        this.loading = false\n      })\n  }\n\n  @action toggleFavorite = async (id) => {\n    if (this.favorites.includes(id)) {\n      this.favorites = this.favorites.filter((favId) => favId !== id)\n    } else {\n      this.favorites.push(id)\n    }\n    await window.localStorage.setItem('favorites', JSON.stringify(this.favorites))\n  }\n\n  @action onPerPageChange = async (value) => {\n    this.perPage = value\n    // reset current page\n    this.currentPage = 1\n    this.loadTargetItems()\n  }\n\n  @action onPageChange = (page) => {\n    this.currentPage = page\n    this.loadTargetItems()\n  }\n\n  @action toggleType = (type) => {\n    if (this.filters.types.includes(type)) {\n      this.filters.types = this.filters.types.filter(item => item !== type)\n    } else {\n      this.filters.types.push(type)\n    }\n    this.filterItems()\n  }\n\n  @action updateSearchFilter = (value = '') => {\n    this.filters.search = value\n  }\n\n  @action resetTypeFilter = () => {\n    this.filters.types = []\n    this.filterItems()\n  }\n\n  @action filterItems = async () => {\n    const { search: name, types } = this.filters\n    let tempList = this.rawList.slice()\n    if (types.length) {\n      tempList = await this.getByTypes(types)\n    }\n    // reset active page to 1 if filter conditions have been changed\n    this.currentPage = 1\n    // filter items by pokemon's name\n    const regex = new RegExp(name, 'i')\n    this.filteredItems = tempList.filter((item) => {\n      return regex.test(item.name)\n    })\n    this.loadTargetItems()\n  }\n\n  getUnique = (array, prop) => {\n    return array\n      .map(e => e[prop])\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      .filter(e => array[e]).map(e => array[e])\n  }\n}\n\n// create state\nconst state = new Store()\nexport {\n  state\n}\n","import React from 'react'\n\nfunction PokemonImage ({ imgSrc = '' }) {\n  return (\n    <img\n      src={imgSrc}\n      width='96'\n      height='96'\n      alt=''\n    />\n  )\n}\n\nexport default PokemonImage\n","import React from 'react'\nimport { Icon } from 'semantic-ui-react'\n\nimport './pokemon-physics.css'\n\nexport default function PokemonPhysics (props) {\n  const { height = 0, weight = 0 } = props\n  return (\n    <div className='pokemon-physics'>\n      <div className='physics-item'>\n        <Icon name='arrows alternate vertical' />{height * 10} cm\n      </div>\n      <div className='physics-item'>\n        <Icon name='weight' />{(weight * 100) / 1000} kg\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Label } from 'semantic-ui-react'\n\nimport './pokemon-types.css'\n\nfunction PokemonTypes ({ types }) {\n  return (\n    <div className='pokemon-type'>\n      {types.map((item) => {\n        return (\n          <Label color='teal' key={item.slot}>\n            {item.type.name}\n          </Label>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PokemonTypes\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\nimport { capitalizeLetter } from '../../utils/capitalizeLetter'\n\nfunction PokemonStats ({ stats = [] }) {\n  const properties = stats.map(item => {\n    return {\n      name: item.stat.name,\n      value: item.base_stat\n    }\n  })\n  return (\n    <List>\n      {properties.map((stat, i) => {\n        return (\n          <List.Item key={i}>\n            {capitalizeLetter(stat.name)}: {stat.value}\n          </List.Item>\n        )\n      })}\n    </List>\n  )\n}\n\nexport default PokemonStats\n","export function capitalizeLetter (data = '') {\n  return data.charAt(0).toUpperCase() + data.slice(1)\n}\n","import React from 'react'\nimport { Grid, Label, Icon } from 'semantic-ui-react'\nimport { PokemonImage } from '../pokemon-image'\nimport { PokemonPhysics } from '../pokemon-physics'\nimport { PokemonTypes } from '../pokemon-types'\nimport { PokemonStats } from '../pokemon-stats'\n\nimport './list-item.css'\n\nfunction ListItem (props) {\n  const {\n    data = {},\n    toggleFavorite = () => {},\n    isFavorite = false\n  } = props\n  return (\n    <Grid.Column className='item-container'>\n      <Label\n        attached='top right'\n        as='a'\n        color={isFavorite ? 'orange' : null}\n        size='large'\n        onClick={() => toggleFavorite(data.id)}\n      >\n        <Icon name={isFavorite ? 'star' : 'star outline'} />\n      </Label>\n      <PokemonImage imgSrc={data.sprites && data.sprites.front_default} />\n      <h2>{data.name}</h2>\n      <PokemonTypes types={data.types} />\n      <PokemonPhysics weight={data.weight} height={data.height} />\n      <PokemonStats stats={data.stats} />\n    </Grid.Column>\n  )\n}\n\nexport default ListItem\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid, Loader } from 'semantic-ui-react'\nimport { ListItem } from '../list-item'\n\n@inject('state')\n@observer\nclass PokemonList extends Component {\n  componentDidMount () {\n    this.props.state.filterItems()\n  }\n\n  render () {\n    const {\n      renderList,\n      loading,\n      toggleFavorite,\n      favorites\n    } = this.props.state\n    if (loading) {\n      return (\n        <Loader active={loading} />\n      )\n    }\n    const listComponent = renderList.length\n      ? (renderList.map((item) => {\n        return (\n          <ListItem\n            key={item.id}\n            data={item}\n            toggleFavorite={toggleFavorite}\n            isFavorite={favorites.includes(item.id)}\n          />\n        )\n      })) : (\n        <Grid.Column>\n          <h2>Nothing Found</h2>\n        </Grid.Column>\n      )\n\n    return (\n      <Grid>\n        {listComponent}\n      </Grid>\n    )\n  }\n}\n\nexport default PokemonList\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nconst Block = (props) => {\n  return (\n    <Grid>\n      <Grid.Column\n        {...props}\n      >\n        {props.children}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default Block\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Label, List } from 'semantic-ui-react'\n\nconst ITEMS_PER_PAGE = [10, 20, 50]\n\n@inject('state')\n@observer\nclass ItemsPerPage extends Component {\n  changePerPage = (count) => {\n    const { onPerPageChange, perPage } = this.props.state\n    // we shouldn't make request if perPage didn't change\n    if (count === perPage) return null\n    onPerPageChange(count)\n  };\n\n  render () {\n    const { state: { perPage } } = this.props\n    return (\n      <List horizontal>\n        <List.Item key='title'>\n          <h3>Items per page: </h3>\n        </List.Item>\n        {\n          ITEMS_PER_PAGE.map(count => {\n            return (\n              <List.Item key={count}>\n                <Label\n                  color={perPage === count ? 'orange' : null}\n                  as={perPage === count ? 'label' : 'a'}\n                  size='large'\n                  onClick={() => this.changePerPage(count)}>\n                  {count}\n                </Label>\n              </List.Item>\n            )\n          })\n        }\n      </List>\n    )\n  }\n}\n\nexport default ItemsPerPage\n","export const debounce = (callback = () => {}, delay = 500) => {\n  let timeout = null\n  return (...args) => {\n    const next = () => callback(...args) // eslint-disable-line\n    clearTimeout(timeout)\n    timeout = setTimeout(next, delay)\n  }\n}\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Form } from 'semantic-ui-react'\nimport { debounce } from '../../utils/debounce'\n\nimport './search-pokemon.css'\n\n@inject('state')\n@observer\nclass SearchPokemon extends Component {\n  searchItems = (e, { value }) => {\n    e.persist()\n    const { filterItems, updateSearchFilter } = this.props.state\n    updateSearchFilter(value)\n    filterItems()\n  }\n\n  resetForm = () => {\n    const { updateSearchFilter, filterItems } = this.props.state\n    updateSearchFilter()\n    filterItems()\n  }\n\n  onSearchChange = debounce(this.searchItems, 750)\n\n  render () {\n    return (\n      <Form className='search-form'>\n        <Form.Input\n          icon='search'\n          iconPosition='left'\n          placeholder='Type a pokemon name...'\n          size='large'\n          onChange={this.onSearchChange}\n        />\n        <Form.Button\n          size='large'\n          type='reset'\n          onClick={this.resetForm}\n        >\n          Clear Search\n        </Form.Button>\n      </Form>\n    )\n  }\n}\n\nexport default SearchPokemon\n","import React, { Component } from 'react'\nimport { List, Label } from 'semantic-ui-react'\nimport { inject, observer } from 'mobx-react'\n\nimport './types-filter.css'\n\n@inject('state')\n@observer\nclass TypesFilter extends Component {\n  filterByType = (e, { children: type }) => {\n    e.preventDefault()\n    const { toggleType } = this.props.state\n    toggleType(type)\n  }\n\n  resetTypeFilter = () => {\n    const { filters: { types }, resetTypeFilter } = this.props.state\n    if (!types.length) return null\n    resetTypeFilter()\n  }\n\n  render () {\n    const {\n      filters: {\n        types: typeList\n      },\n      pokemonTypes\n    } = this.props.state\n    return (\n      <React.Fragment>\n        <h3>Pokemon Type</h3>\n        <List horizontal className='types-list'>\n          {\n            pokemonTypes.map((item) => {\n              return (\n                <List.Item key={item.name}>\n                  <Label\n                    as='a'\n                    size='large'\n                    onClick={this.filterByType}\n                    color={typeList.includes(item.name) ? 'orange' : null}>\n                    {item.name}\n                  </Label>\n                </List.Item>\n              )\n            })\n          }\n          <List.Item key='clear-all'>\n            <Label\n              as='a'\n              onClick={this.resetTypeFilter}\n              color='grey'\n              size='large'\n            >\n            Reset Type\n            </Label>\n          </List.Item>\n        </List>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default TypesFilter\n","import React from 'react'\nimport { Block } from '../block-wrapper'\nimport { ItemsPerPage } from '../items-per-page'\nimport { SearchPokemon } from '../search-pokemon'\nimport { TypesFilter } from '../types-filter'\n\nfunction Header () {\n  return (\n    <React.Fragment>\n      <Block>\n        <h1 style={{ marginTop: '1rem' }}>Pokedex App</h1>\n      </Block>\n      <Block>\n        <ItemsPerPage />\n      </Block>\n      <Block mobile={16} tablet={8} computer={8}>\n        <SearchPokemon />\n      </Block>\n      <Block>\n        <TypesFilter />\n      </Block>\n    </React.Fragment>\n  )\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Pagination } from 'semantic-ui-react'\nimport { Block } from '../block-wrapper'\n\nimport './pagination.css'\n\n@inject('state')\n@observer\nclass Paginator extends Component {\n  onPageChange = (e, { activePage }) => {\n    e.preventDefault()\n    const { onPageChange } = this.props.state\n    onPageChange(activePage)\n  };\n\n  render () {\n    const {\n      currentPage,\n      totalPages,\n      renderList\n    } = this.props.state\n    return (\n      <Block textAlign=\"center\" mobile={16}>\n        {\n          totalPages > 1 && renderList.length ? (\n            <Pagination\n              activePage={currentPage}\n              onPageChange={this.onPageChange}\n              totalPages={totalPages}\n            />\n          ) : null\n        }\n      </Block>\n    )\n  }\n}\n\nexport default Paginator\n","import React, { Component } from 'react'\nimport { Provider, observer } from 'mobx-react'\nimport { Container } from 'semantic-ui-react'\n\nimport { state } from '../../state'\nimport { PokemonList } from '../pokemon-list'\nimport { Header } from '../header'\nimport { Paginator } from '../pagination'\n\n@observer\nclass App extends Component {\n  componentDidMount () {\n    state.getRawList()\n  }\n\n  render () {\n    return (\n      <Provider state={state}>\n        <Container>\n          <Header />\n          <PokemonList />\n          <Paginator />\n        </Container>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport { App } from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}